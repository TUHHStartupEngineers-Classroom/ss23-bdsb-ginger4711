---
title: "Data Acquisition"
author: "Christian SÃ¼hl"
---

# CHALLENGE

Asking the API for the weather on Gran Canaria in this week.
```{r}
# Task 1. Asking an API.
library(ggplot2)

weather_api <- function() {
  url <- modify_url(url = "https://api.open-meteo.com/v1/forecast?latitude=27.7564556&longitude=-15.5910148&current_weather=true&hourly=temperature_2m,relativehumidity_2m,windspeed_10m")
  resp <- GET(url)
  stop_for_status(resp) # automatically throws an error if a request did not succeed
}

weather <- weather_api() %>% content()

weather_tbl <- tibble(time = weather[["hourly"]][["time"]],temp = weather[["hourly"]][["temperature_2m"]])
weather_df <- weather_tbl %>% data.frame
print(weather_df) # Print weather as df
weather_df$time <- as.numeric(as.POSIXct(strptime(weather_df$time, "%Y-%m-%dT%H:%M"))) # Convert time to numberic
weather_df$temp <- as.numeric(weather_df$temp) # Convert temp to numberic

ggplot(weather_df, aes(time, temp)) +
  geom_point() +
  scale_y_continuous(limits = c(-10, 40)) # Ploting weather
```

```{r}
# Task 2. Looking at other bike shops.

# Radon-bikes mountainbike category
url <- "https://www.radon-bikes.de/e-bike/mountainbike/"

# Retrieve names from bikeTitle class
bike_names <- url %>% 
  read_html() %>% 
  html_nodes(".bikeTitle > h4") %>%
  html_text() 

# Retrieve prices from info class
bike_prices <- url %>% 
  read_html() %>% 
  html_nodes(".info > div > div > span") %>%
  html_text()
# Since there is a second price in pounds sterling we remove those and only look at the price in euros
bike_prices <- bike_prices[seq(1,length(bike_prices),2)]

# Transform into tibble and print
tibble(name = bike_names,price = bike_prices) %>% print()

# Since there are only 6 different bikes in the mountainbike category, only these are shown
```